:: Changelog[text]
Version 0.5
* Initial release.

Version 0.51
* Protector no longer causes an error in PassageDone, and should be removed properly if the protected character dies.

Version 0.52
* Stat mod glitch should be fixed.
* Alert application now produces no message, as intended.

Version 0.52.1
* Streamlined some things in backend to be more readable. Effect adder now filters by attribute like the effect manager does, and if statements in story JavaScript changed to switches. I think I fixed all bugs created by this change, but do tell me if you encounter anything.
* Pronouns added as attributes in the "Actor" class to make system text easier, like I alluded to in earlier versions of the documentation. Constructor must now take a gender (as a single uppercase character, F/M/N) as its final argument.
* Documentation updated to reflect changes.

Version 0.53
* Documentation actually updated to reflect changes.

Version 0.53.1
* Design notes on status effects and battle flow added.
* Model passages added to enable use of different battle flow systems.

Version 0.54
* Added difficulty settings! Hard mode is the original targeting model. Easy mode will disable smart targeting altogether. Medium mode will still have smart targeting, but vulnerable characters will only get preferential chances of being targeted rather than being the only possible targets. Documentation will be updated when time permits.

Version 0.55
* Completely rehauled the way stats are formatted: they are now all bound to a single Map object with sub-attributes for base values and temporary modifiers. Getter and setter functions added to enable easy access to these values.
* Effect manager now only runs when necessary instead of all the time! This will probably save your processor a lot of grief.
* Relatedly, Protector SHOULD finally behave properly.
* Documentation updated to reflect changes.
* Added new passage for discussing implementation of extra features.
* Added information about level up mechanics, and added example implementation for both standard level up mechanics and a point-buy system.

Version 0.56
* New puppet added: the Bard! They are a jack-of-all-trades character designed to exploit the stackability of basic debuffs. I have not balance-tested them at all so please try them out.
* Relatedly: party member swap functionality is in! I plan to tweak it later but it currently works as long as your characters aren't modified in any way between swaps. (Thanks to greyelf for helping me with the visual elements.)
* Martyr is now removed if someone else uses it at the same time.
* Stun wearing off will no longer trigger an infinite loop.
* Tweaked the way some passages and widgets worked for more modularity and readability.

Version 0.57
* New puppets added: the Archer, the Cleric, and the Witch! These are all specialists with 50 in one stat and 20 in both others. Anyone who felt the battles took too long should try out Archer. They have not been balance-tested at all, so do tell of any hilarious gamebreaking situations you encounter.
* Action text added for all actions, and restructured the passage so it displays more consistently. A few other things have also been tidied behind the scenes to hopefully make the code easier to use.

Version 0.9
* Massive rehaul. Actions, puppets, enemies, items, and effects now properly defined in database JavaScript files. Many widgets offloaded to JavaScript functions, and battle passage code tweaked for greater modularity. Actions now display fully consistently with special formatting that looks much neater and more professional.
* Added support for elemental affinities and status effect tolerance.
* Passages moved further down in the story map to hopefully prevent overlapping of story files when importing the engine through compilers.

Version 0.95
* Custom objects are now serializable, with custom {{{clone()}}} and {{{toJSON()}}} functions. {{{Actor}}} and {{{Inventory}}} are revived to exact copies of their old versions, while {{{Action}}}, {{{Item}}} and {{{Effect}}} are revived to new versions using only their name ID. This allows changes made to the database to be incorporated when loading saves from an earlier version.
** A section on this has been added to the documentation.
* Rehauled inventory. It now functions like a Map, meaning you can just call up the item name to find something instead of using the {{{<<find>>}}} widget.
* Equipment is in, but untested. It <i>should</i> work, but no promises.
* {{{<<effectmanager>>}}} and {{{<<removeEffect>>}}} have been made obsolete by applying equipment logic to status effects. Effects now apply their changes through instance functions called on application and removal and defined in the effect database. Method functions for adding and removing effects have been added to the Actor class to facilitate this. Call them with a {{{<<print>>}}} statement to get the add/removal text, or use a {{{<<run>>}}} statement to mask it.
** Damage-over-time calculations are also now handled through instance methods defined in the effect database. Pass the character to the effect's {{{damage()}}} function to calculate how much damage they take. The function returns the damage value, so pair it with a {{{set $dmg =}}} to store it or a {{{<<print>>}}} to show the value (such as in the status pane).
*** The messages displayed when DoT is triggered have also been tied to effect definitions.
* setTol and getTol changed for more clarity and to facilitate modular changes from equipment. Setter is now both relative and absolute: if a tolerance doesn't exist, it will create one, and if a tolerance does exist, it'll add the passed value. Immunity is now handled through a third attribute that can be set by passing a Boolean for a value.
* Modified spell effects are now handled through the {{{spellMod()}}} attribute function rather than the "spell check" passage; see documentation for details.
* All widgets aside from damage calculation, targeting, and {{{<<addeffect>>}}} have been consolidated into the general widgets passage and exported to a twee file, because I was sick of having to tab through a zillion passages to find the thing I needed to edit. Enjoy the glory of Ctrl+F.
* Added Actor method functions: setHP and setMaxHP.
* Status effect previews now provide the duration of the effect.
* Effect database link added to the documentation.
* Enemy AoE attacks that mimic player attacks will now target the player's party instead of the enemies.
* Corrected a key/value mixup in {{{decCD()}}}. Enemy cooldown should now work correctly.
* Enemy actions will no longer produce an error if they fail to find a target. (Thanks to Reddit user itaigreif for finding this.)
* Corrected a subjective/objective mixup in the pronoun object.

KNOWN BUGS:
* The enemy action loop doesn't quite work as intended; if there's an else clause (as there should be), the probabilities are thrown off because a failed action will automatically be changed to the default. Is this really a problem though...? Maybe it's best if it does work that way.