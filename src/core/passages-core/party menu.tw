:: Widget: actorDisplay [widget nobr]
<<widget "actorDisplay">>
/* Standard display code for a single character. By default, shows their name and stats on the left, and their equipment on the right. Modifiers can be used to change specific parts.

ARG 0 = character to be displayed
ARG 1 = special case modifier [optional]

Be VERY CAREFUL about labeling your temporary variables. This widget uses a lot of loops, and errors can occur if they overwrite temporary variables used elsewhere. */

<<if ndef $args[0]>> /* error handler */
	<<print "ERROR: No puppet passed to actorDisplay">>
	<<run console.log("ERROR in actorDisplay: No puppet passed")>>
<<else>>

<<set _puppet = $args[0]>>
<<set _displayModel = $args[1]>>
<<set _style = "">>
<<if def _displayModel && _displayModel !== "standard">>
	<<set _classMod = " small-display">>
<<else>>
	<<set _classMod = "">>
<</if>>
<<if ndef _i>>
	<<set _i = 0>>
<</if>>

<<if _puppet !== null>>
	<div @class="'menuactor'+_classMod" @id="_i">
	/* container for the entire actor box */
		<<switch _displayModel>>
			<<default>>
			/* Default display makes room for a portrait on the left-hand side, if they're enabled. */
				<<if setup.PORTRAITS === true>>
					<div class="portrait">[img[setup.ImagePath+_p.portrait]]</div>
					<<set _style = "left:96px">>
				<</if>>
		<</switch>>
		<div @class="'menuactor-nameblock'+_classMod" @style=_style>
		/* container for the left-hand side of the box, typically containing the puppet's name */
			<div class="menuactor-name" id="toggle">
			/* Container for the puppet's name. This is a point of interaction in most menus, so there is a switch here for different menu functionalities. */
				<<actorNameLink>>
			</div> /* close name display */
			<<switch _displayModel>>
				<<case "inventory" "decurse" "equipment">>
				/* In these menus, the character's stats are displayed below their name. */
					<div @class="'menuactor-stats monospace'+_classMod">
					<<for _k, _v range _puppet.stats>>
						<<include "menu stat display">>
					<</for>>
					</div>
				<<default>>
				/* In the default display, the character's level is displayed below their name. */
					<div class="menuactor-level">LEVEL _puppet.level</div>
			<</switch>>
		</div> /* close name block */
			<<actorRightDisplay>>
	</div> /* close actor box */
<</if>>

<</if>> /* close error handler if */

<</widget>>

:: Widget: actorNameLink [widget nobr]
<<widget "actorNameLink">>
/* Switch for different functionalities tied to the character's name in actorDisplay. */

<<switch _displayModel>>
	<<case "inventory">>
	/* On the inventory screen, characters may be displayed when EQUIPPING or USING items. In both cases, the character name is clicked to perform the relevant function. The inventory screen must be updated afterwards to reflect the change. */
		<<switch _event>>
			<<case "equip">>
				<<capture _puppet>>
					<<link _puppet.name>>
						<<run _puppet.equip(_display)>>
						<<unset _display>>
						<<replace "#menu-display">><<include "inventory item display">><</replace>>
						<<replace "#itemlist">><<include "inventory item list">><</replace>>
					<</link>>
				<</capture>>
			<<case "use">>
				<<capture _puppet>>
					<<link _puppet.name>>
						<<run _display.onUse(_puppet)>>
						<<unset _display>>
						<<replace "#menu-display">><<include "inventory item display">><</replace>>
						<<replace "#itemlist">><<include "inventory item list">><</replace>>
					<</link>>
				<</capture>>
			<<default>>
				<<print _puppet.name>>
		<</switch>>
	<<case "action">>
		<<capture _puppet>>
			<<link _puppet.name>>
				<<run _displayedAction.onUse(_puppet,_display)>>
				<<unset _displayedAction>>
				<<replace "#partydisplay">>
					<<include "status party display">>
				<</replace>>
			<</link>>
		<</capture>>
	<<case "decurse">>
	/* In the decurse menu, the name has no special functionality. Just display it normally. */
		<<print _puppet.name>>
	<<case "equipment">>
	/* In the equipment menu, the character name serves two functionalities: When the full party is displayed, clicking it will select the character; if a character is selected, clicking it will deselect them and return to the full party display. */
		<<if def _s>> /* if selector already defined, deselect and refresh screen */
			<<link _puppet.name>>
				<<unset _s>>
				<<replace "#puppets">><<include "equip manager puppets">><</replace>>
				<<replace "#equipment-list">><<include "equipment list">><</replace>>
			<</link>>
		<<else>> /* if no one selected, select this character and refresh screen */
			<<capture _i>>
			<<link _puppet.name>>
				<<if def _s>>
					<<if _s != _i>>
						<<set _s = _i>>
					<<else>>
						<<unset _s>>
					<</if>>
				<<else>>
					<<set _s = _i>>
				<</if>>
				<<replace "#puppets">><<include "equip manager puppets">><</replace>>
				<<replace "#equipment-list">><<include "equipment list">><</replace>>
			<</link>>
			<</capture>>
		<</if>>
	<<default>>
	/* In the default display, the character name serves two functionalities: When the full party is displayed, clicking it will select the character; if a character is selected, clicking it will deselect them and return to the full party display. */
		<<if def _display>>
		/* If _display exists, a character has already been selected. Clicking the name again will deselect the character. */
			<span id="toggle">
			<<link "_puppet.name">>
				<<unset _display>>
				<<replace "#partydisplay">><<include "status party display">><</replace>>
			<</link>>
			</span>
		<<else>>
		/* If no character is selected, clicking the name will select this character. */
			<span @id=_i>
			<<capture _puppet>>
			<<link "_puppet.name">>
				<<set _display = _puppet>>
				<<set _stScreen = 1>>
				<<replace "#partydisplay">><<include "status party display">><</replace>>
			<</link>>
			<</capture>>
			</span>
		<</if>>
<</switch>>

<</widget>>

:: Widget: actorRightDisplay [widget nobr]
<<widget "actorRightDisplay">>
/* Branch for determining what is displayed on the right-hand side of the actor display. */

<<if (_displayModel == "inventory" && _event == "use") || (ndef _displayModel || _displayModel == "standard")>>
/* By default or if we're using an item on the inventory screen, we want to display HP and MP on the right-hand side. */
	<<set _id = 'hp'+_i>>
	<<run _HPmeters.push(_id)>>
	<<newmeter _id 1>>
		<<colors setup.PLAYER_BAR_COLOR>>
		<<animation false>>
		<<sizing 100% 0.5em>>
	<</newmeter>>
	<<set _id = 'mp'+_i>>
	<<run _MPmeters.push(_id)>>
	<<newmeter _id 1>>
		<<colors setup.MP_BAR_COLOR>>
		<<animation false>>
		<<sizing 100% 0.5em>>
	<</newmeter>>
	<div @class="'menuactor-hpmpblock'+_classMod">
		<div class="hpmp">
			HP: <span style="float:right">
				<div class="hpmpvalue">_puppet.hp</div>/<div class="hpmpvalue">_puppet.maxhp</div>
				</span>
		</div>
		<<showmeter _HPmeters[puppets().indexOf(_puppet)] `_puppet.hp / _puppet.maxhp`>>
		<<if setup.SHOW_MP === true>>
			<div class="hpmp">
				MP: <span style="float:right">
					<div class="hpmpvalue">_puppet.en</div>/<div class="hpmpvalue">_puppet.maxen</div>
					</span>
			</div>
			<<showmeter _MPmeters[puppets().indexOf(_puppet)] `_puppet.en / _puppet.maxen`>>
		<</if>>
	</div>
<<else>>
/* In all other cases, display equipment on the right-hand side. */
	<div class="menuactor-equipment small-display">
	<<for _name, _slot range _puppet.equipment>>
		<<for _subslot, _item range _slot>>
			<div class="menuactor-equipment-slot">_name</div>
			<<equipSlotDisplay _item>>
		<</for>>
	<</for>>
	</div>
<</if>>
<<if ndef _displayModel || _displayModel == "standard">>
/* In the standard display, an additional XP block is displayed to the right of the previous block. */
	<div class="menuactor-xpblock">
		<div style="font-weight:bold">Experience</div>
		<div style="float:right">_puppet.xp</div>
		<br/>
		<div style="font-weight:bold">To next level</div>
		<<set _toNext = _puppet.XPtoNext()>>
		<div style="float:right"><<if typeof(_toNext) == 'number'>><<print (_toNext-_puppet.xp)>><<else>><<print _toNext>><</if>></div>
	</div>
<</if>>

<</widget>>

:: Widget: equipSlotDisplay [widget nobr]
<<widget "equipSlotDisplay">>
/* Standardized display for a single instance of character equipment. By default, this displays below the slot name itself. Assume called within actorDisplay, and uses _displayModel for modular functionality.

ARG 0 = equipped item
*/

<<if ndef $args[0]>> /* error handler */
	<<print "ERROR: No item passed to equipSlotDisplay">>
	<<run console.log("ERROR in equipSlotDisplay: no item passed")>>
<<else>>

<<set _item = $args[0]>>

<<if _item === null>><span class="menuactor-equipment-name">&nbsp;</span> /* if slot empty, display blank space */
<<else>>
	<div class="menuactor-equipment-name">_item.name<br/>
	<span class="actdesc">_item.info</span>
	</div>
	<span class="unequip-button">
	<<switch _displayModel>>
	/* Unequip button displayed here. By default, this is an "[X]" link at the far right of the item name. */
		<<case "inventory">>
		/* no unequip feature; display nothing */
		<<case "decurse">>
		/* In Decurse, only display unequip if the item is sticky and player can pay the cost. Deduct the cost and refresh the shop screen after click. */
			<<if $currency >= _decurseCost && !_puppet.lockEquipment && _item.sticky>>
				<<capture _puppet, _slot, _subslot>>
				<<link "[X]">>
					<<run _puppet.unequip(_slot,_subslot,{unsticky:true})>>
					<<set $currency -= _decurseCost>>
					<<update>>
					<<replace "#business-area" t8n>><<include "decurse-remove">><</replace>>
				<</link>>
				<</capture>>
			<</if>>
		<<default>>
		/* Default is party equipment screen. Only display unequip if the item is not sticky and the puppet does not have locked equipment. Remember to pass the subslot index too for subslot equipment. */
			<<if !_puppet.lockEquipment && !_item.sticky>>
				<<capture _puppet, _slot, _subslot>>
				<<link "[X]">>
					<<run _puppet.unequip(_slot,_subslot)>>
					<<replace "#equipment-list">><<include "equipment list">><</replace>>
					<<replace "#puppets">><<include "equip manager puppets">><</replace>>
				<</link>>
				<</capture>>
			<</if>>
	<</switch>>
	</span>
<</if>>

<</if>> /* end error handler if */
<</widget>>

:: Widget: actionListMenu [widget nobr]
<<widget "actionListMenu">>
/* Widget for display of player actions in the menu. */

<<run console.assert($args.length > 0 && ($args[0] instanceof Puppet),"ERROR in actionListMenu: no Puppet")>>
<<set _char = $args[0]; _actions = _char.actions>>
<<if _char.crisis instanceof Array>>
	<div class="abilities-header">CRISIS</div>
	<<for _action range _char.crisis>>
		<<print _action>>
	<</for>>
	<br/>
<</if>>
<div class="abilities-header">ABILITIES</div>
<<liveblock>>
<<for _action range _actions>>
<<if !_action.invisible>>
	<<set _actionID = "action"+_actions.indexOf(_action)>>
	<div @id="_actionID" class="actionDisplay">
		<<print _action>>
		<<capture _action, _actionID>>
		<<timed 0s>>
		<<if _action.onUse && !_action.check(_display)>>
			<<set _selector = "#"+_actionID+" .action-name">>
			<<replace _selector>>
				<<link "_action.name">>
					<<if _action.instantUse === true>>
						<<run _action.onUse()>>
					<<else>>
						<<set _displayedAction = _action>>
						<<replace "#partydisplay">>
							<<include "action use puppets">>
						<</replace>>
					<</if>>
				<</link>>
			<</replace>>
		<</if>>
		<<if !_action.noDefault && _char.defaultAction !== _action.name>>
			<<set _selector = "#"+_actionID+" .action-tags">>
			<<set $(_selector).after($(`<div class="default-link">`))>>
			<<set _selector = "#"+_actionID+" .default-link">>
			<<replace _selector>>
				<<link "[Set as default]">>
					<<set _char.defaultAction = _action.name>>
					<<update>>
				<</link>>
			<</replace>>
		<</if>>
		<</timed>>
		<</capture>>
	</div>
<</if>>
<</for>>
<</liveblock>>
<</widget>>

:: action use puppets [nobr]
<div id="menu-display">
	<<print _displayedAction>>
</div>
<div id="puppets">
<<set _HPmeters = []>>
<<set _MPmeters = []>>
<<for _i, _p range puppets()>>
	<<actorDisplay _p "action">>
<</for>>
</div>

:: Widget: unequipAll [widget nobr]
<<widget "unequipAll">>
<<link "Unequip All">>
	<<for _puppet range puppets().concat($Reserve_Puppets).filter(function(p){ return !p.lockEquipment; })>>
		<<run _puppet.unequipAll()>>
	<</for>>
	<<goto `passage()`>>
<</link>>
<</widget>>

:: menubar[nobr]
<span id="status">
<span class="menunav monospace">
[A] ↑<br/>
[D] ↓
</span>
<<for _n, _option range setup.MENU_OPTIONS>>
<<if _n != $menu_screen>>
<<capture _n, _option>>
<span @id="'menu'+_n">
<<link _option>>
	<<set $menu_screen = _n>>
	<<print '<<goto \"Menu: '+_option+'\">>'>>
<</link>></span><</capture>>
<<else>>
<b>_option</b>
<</if>>
<br/>
<</for>>
<span id="menu-return"><<longreturn>></span>
<div class="GPdisplay monospace"><<print setup.CURRENCY_NAME>>: $currency</div>
</span>

:: Menu: Status[menu battle noreturn]
<span id="content" class="menu"><<nobr>>
<div id="partydisplay">
<<include "status party display">>
</div>
<</nobr>>
</span>

:: menu stat display[nobr]
<<if !setup.hiddenStats.includes(_k)>>
	<<if def setup.statInfo[_k]>>
		<<set _class = "tooltip">>
	<<else>>
		<<set _class = "">>
	<</if>>
	<div class="menuactor-statname"><span @class=_class>_k<<if def setup.statInfo[_k]>><span class="tooltiptext"><<print setup.statInfo[_k]>></span><</if>></span></div>
	<div class="menuactor-statvalue">_v.base</div>
	<<if _v.bonus != 0>>
		<div class="menuactor-statmod">
		<<if _v.bonus > 0>>
			@@.green;<<print "\+"+_v.bonus>>@@
		<<elseif _v.bonus < 0>>
			@@.stat-lowered;<<print "-"+_v.bonus>>@@
		<</if>>
		</div>
	<</if>>
<</if>>

:: status special detail[nobr]
<div style="position:relative">
	<<switch setup.STATUS_SCREENS.menu[_stScreen-1]>>
		<<case "elements">>
			<<set _title = "elemental affinities">>
		<<case "ailments">>
			<<set _title = "ailment tolerances">>
		<<default>>
			<<set _title = setup.STATUS_SCREENS.menu[_stScreen-1]>>
	<</switch>>
	<div class="menuactor-special-title">_title</div>
	<<if setup.STATUS_SCREENS.menu.length > 1>>
	<div class="cyclebuttons">
		<span id="statusback">
		<<link "<">>
			<<set _stScreen-->>
			<<if _stScreen < 1>>
				<<set _stScreen = setup.STATUS_SCREENS.menu.length>>
			<</if>>
			<<replace "#menuactor-special">><<include "status special detail">><</replace>>
		<</link>>
		</span>
		<span id="statusforward">
		<<link ">">>
			<<set _stScreen++>>
			<<if _stScreen > setup.STATUS_SCREENS.menu.length>>
				<<set _stScreen = 1>>
			<</if>>
			<<replace "#menuactor-special">><<include "status special detail">><</replace>>
		<</link>>
		</span>
	</div>
	<</if>>
</div>
<<switch setup.STATUS_SCREENS.menu[_stScreen-1]>>
<<case "equipment">>
	<div style="margin-left:1em;">
	<<for _name, _slot range _display.equipment>>
		<<for _index, _item range _slot>>
			<div class="menuactor-equipment-slot">_name</div>
			<<if _item === null>><span class="menuactor-equipment-name">&nbsp;</span>
			<<else>>
				<div class="menuactor-equipment-name">_item.name</div>
			<</if>>
		<</for>>
	<</for>>
	</div>
<<case "elements">>
	<div style="margin-left:1em; width:75%; font-weight:bold">
	<<for _k, _v range _display.elements>>
		<span class="statname"><<print _k>></span>
		<span class="elementdisplay monospace"><<if setup.SOAK>><<soak _v>> /<</if>><div style="display: inline-block; min-width:45px; text-align:right"><<res _v>></div></span>
		<br/>
	<</for>>
	</div>
<<case "ailments">>
	<div style="margin-left:1em; width:75%; font-weight:bold">
	<<for _k, _v range _display.tolerances>>
		<<if _v.current != 0>>
			<<print _k>>
			<<tol _v>>
			<br/>
		<</if>>
	<</for>>
	</div>
<</switch>>

:: status party display[nobr]
<<if def _display>>
	<<actorDisplay _display>>
	<div class="menuactor-detail">
		<<if def setup.STATUS_SCREENS.menu && setup.STATUS_SCREENS.menu.length > 0>>
			<<set _style = "">>
		<<else>>
			<<set _style = "border-right: none">>
		<</if>>
		<div class="menuactor-stats monospace" @style=_style>
		<<for _k, _v range _display.stats>>
			<<include "menu stat display">>
		<</for>>
		<<if def _display.HPregen && _display.HPregen !== null>>
			<div class="menuactor-statname">HP regen</div>
			<div class="menuactor-statvalue"><<print _display.HPregenFlat>> / <<print _display.HPregenPercent*100>>%</div>
		<</if>>
		</div>
		<<if def setup.STATUS_SCREENS.menu && setup.STATUS_SCREENS.menu.length > 0>>
		<div id="menuactor-special">
			<<include "status special detail">>
		</div>
		<</if>>
	</div>
	<br/>
	<div id="menuActionList">
	<<actionListMenu _display>>
	</div>
<<elseif ndef _display>>
	<<set _HPmeters = []>>
	<<set _MPmeters = []>>
	<<for _i, _p range puppets()>>
		<<actorDisplay _p>>
	<</for>>
<</if>>

:: Menu: Inventory[menu battle noreturn]
<span id="content" class="menu"><<nobr>>
<<set _filter = "all">>
<div id="menu-display">
<<include "inventory item display">>
</div>
<div id="itemlist">
<<include "inventory item list">>
</div>
<</nobr>>
</span>

:: inventory item list[nobr]
<div style="display:flex; justify-content:space-evenly;">
<<if _filter == "all">>
	<b>All</b>
<<else>>
	<<link "All">>
		<<set _filter = "all">>
		<<replace "#itemlist">><<include "inventory item list">><</replace>>
	<</link>>
<</if>>
<<if _filter == "usable">>
	<b>Usable</b>
<<else>>
	<<link "Usable">>
		<<set _filter = "usable">>
		<<replace "#itemlist">><<include "inventory item list">><</replace>>
	<</link>>
<</if>>
<<if _filter == "equipment">>
	<b>Equipment</b>
<<else>>
	<<link "Equipment">>
		<<set _filter = "equipment">>
		<<replace "#itemlist">><<include "inventory item list">><</replace>>
	<</link>>
<</if>>
</div>
<br/>
<div class="itemcontainer">
<<set _p = 2>>
<<for _name, _item range $inventory>>
	<<if _filter == "all" || (_filter == "usable" && _item.usable.includes("inmenu")) || (_filter == "equipment" && _item.equippable)>>
	<<if _p == 1>>
		<<set _p = 2>>
	<<elseif _p == 2>>
		<<set _p = 1>>
	<</if>>
	<div @class="'item'+_p">
	<b>
	<<capture _item>>
	<<link _item.name>>
		<<set _display = _item>>
		<<replace "#menu-display">><<include "inventory item display">><</replace>>
	<</link>>
	<</capture>>
	</b> <span class="itemstock">(_item.stock)</span>
	</div>
	<</if>>
<</for>>
</div>

:: inventory item display[nobr]
<<if ndef _display || _display === null>>
	<div style="text-align: center; line-height: 70px; color: gray">Click on an item to see info</div>
<<else>>
<b>_display.name</b><br/>
<<if def _display.equippable>><i style="font-size:12px"><<print _display.equippable.slot>></i><br/><</if>>
<div class="action-info">_display.info</div>
<div class="action-desc">_display.desc</div>
<<if _display.usable.includes('inmenu') || _display.equippable>>
<div style="display: flex; justify-content: space-evenly">
	<<set _b = 0>>
	<<if _display.usable.includes('inmenu') && _display.stock > 0>>
		<<set _b++>>
		<span @id="'button'+_b">
			<span id="usebutton">
			<<include "inventory use button">>
			</span>
		</span>
	<</if>>
	<<if _display.equippable && _display.stock > 0>>
		<<set _b++>>
		<span @id="'button'+_b">
			<span id="equipbutton">
			<<include "equip button">>
			</span>
		</span>
	<</if>>
</div>
<</if>>
<</if>>

:: equip button[nobr]
<<button "EQUIP">>
	<<set _event = "equip">>
	<<if document.getElementById("usebutton")>><<replace "#usebutton">><<include "inventory use button">><</replace>><</if>>
	<<if document.getElementById("equipbutton")>><<replace "#equipbutton">><<include "inventory cancel button">><</replace>><</if>>
	<<replace "#itemlist">><<include "inventory puppets">><</replace>>
<</button>>
<<if _b == 1>>
<span class="monospace" style="font-size:85%">[Q]</span>
<<elseif _b == 2>>
<span class="monospace" style="font-size:85%">[W]</span>
<</if>>

:: inventory use button[nobr]
<<button "USE">>
	<<if _display.instantUse === true>>
		<<run _display.onUse()>>
	<<else>>
		<<set _event = "use">>
		<<if document.getElementById("usebutton")>><<replace "#usebutton">><<include "inventory cancel button">><</replace>><</if>>
		<<if document.getElementById("equipbutton")>><<replace "#equipbutton">><<include "equip button">><</replace>><</if>>
		<<replace "#itemlist">><<include "inventory puppets">><</replace>>
	<</if>>
<</button>>
<span class="monospace" style="font-size:85%">[Q]</span>

:: inventory cancel button[nobr]
<span id="cancelbutton">
<<button "CANCEL">>
	<<if document.getElementById("usebutton")>><<replace "#usebutton">><<include "inventory use button">><</replace>><</if>>
	<<if document.getElementById("equipbutton")>><<replace "#equipbutton">><<include "equip button">><</replace>><</if>>
	<<replace "#itemlist">><<include "inventory item list">><</replace>>
<</button>>
</span>
<span class="monospace" style="font-size:85%">[R]</span>

:: inventory puppets[nobr]
<<set _HPmeters = []>>
<<set _MPmeters = []>>
<<for _i, _p range puppets().filter(function(p) { return temporary().event != "equip" || (!p.lockEquipment && p.checkRestriction(temporary().display)); })>>
	<<actorDisplay _p "inventory">>
<</for>>

:: Menu: Party[menu battle noreturn]
<span id="content" class="menu"><center style="font-weight:bold">ACTIVE PUPPETS</center>
<<nobr>>
<div class="actors" id="puppets">
<<include "party manager puppets">>
</div>
<</nobr>>
<center style="font-weight:bold">RESERVE PUPPETS</center>
<<nobr>>
<div class="actors" id="reserve">
<<include "party manager reserve">>
</div>
<</nobr>>

<<unequipAll>>
</span>

:: party manager puppets[nobr]
<<for _i, _puppet range $puppets>>
	<<if _puppet !== null>>
	<div class="actor" @id="_i" style="min-width:150px">
	<center>
	<<capture _i>>
	<<link _puppet.name>>
		<<if def _s>>
			<<run $('#' + _s).removeClass("selected")>>
			<<if _s != _i>>
				<<set _s = _i>>
				<<run $('#' + _s).addClass("selected")>>
			<<else>>
				<<unset _s>>
			<</if>>
		<<else>>
			<<set _s = _i>>
			<<run $('#' + _i).addClass("selected")>>
		<</if>>
		<<run console.log("i = "+_i); console.log("s = "+_s)>>
		<<replace "#reserve">><<include "party manager reserve">><</replace>>
	<</link>>
	<</capture>>
	</center><br/>
	<<for _k, _v range _puppet.stats>>
		<span class="statname"><<print _k>>:</span>
		<<statOOB _k _puppet>>
		<br/>
	<</for>>
	</div>
	<</if>>
<</for>>

:: party manager reserve[nobr]
<<for _j, _puppet range $Reserve_Puppets>>
	<div class="actor" style="min-width:150px">
	<center>
	<<if def _s>>
		<<capture _puppet, _j>>
		<<link _puppet.name>>
			<<run $Reserve_Puppets[_j] = $puppets[_s]>>
			<<set $puppets[_s] = _puppet>>
			<<unset _s>>
			<<replace "#puppets">><<include "party manager puppets">><</replace>>
			<<replace "#reserve">><<include "party manager reserve">><</replace>>
		<</link>>
		<</capture>>
	<<else>>
		_puppet.name
	<</if>>
	</center><br/>
	<<for _k, _v range _puppet.stats>>
		<span class="statname"><<print _k>>:</span>
		<<statOOB _k _puppet>>
		<br/>
	<</for>>
	</div>
<</for>>

:: Menu: Equipment[menu battle noreturn]
<span id="content" class="menu"><<nobr>>
<div id="puppets">
<<include "equip manager puppets">>
</div>
<div id="equipment-list">
<<include "equipment list">>
</div>
<</nobr>>
</span>

:: equip manager puppets[nobr]
<<if def _s>>
	<<set _i = "null">>
	<<actorDisplay $puppets[_s] "equipment">>
<<else>>
<<for _i, _p range $puppets>>
	<<actorDisplay _p "equipment">>
<</for>>
<</if>>

:: equipment list[nobr]
<<if def _s && !$puppets[_s].lockEquipment>>
	<div style="line-height:1.4">
	<<set _count = 0>>
	<<for _k, _v range $inventory>>
		<<if _v.equippable && _v.stock > 0>>
			<br/>
			<<set _count++>>
			<<if (def _s && $puppets[_s].checkRestriction(_v)) || ndef _s>>
				<div @id="_k">
				<b>
				<<if def _s>>
					<<capture _v>>
					<<link _v.name>>
						<<run $puppets[_s].equip(_v)>>
						<<replace "#puppets">><<include "equip manager puppets">><</replace>>
						<<replace "#equipment-list">><<include "equipment list">><</replace>>
					<</link>>
					<</capture>>
				<<else>>
					<<print _k>>
				<</if>>
				</b>
				<span style="float:right">(_v.stock)</span><br/>
				<i style="font-size:12px"><<print _v.equippable.slot>></i><br/>
				<<if _v.equippable.restrictedTo.length > 0>>
					<div style="font-size:12px; font-style:italic">Restriction: <<for _char range _v.equippable.restrictedTo>><<print _char>><</for>></div>
				<</if>>
				<<print _v.desc>><br/>
				<span class="actdesc"><<print _v.info>></span>
				</div>
			<</if>>
		<</if>>
	<</for>>
	<<if _count == 0>>
	You don't have any equipment.
	<</if>>
	</div>
<<elseif def _s && $puppets[_s].lockEquipment>>
	<i>This character's equipment can't be changed.</i>
<<else>>
	<<unequipAll>>
<</if>>
