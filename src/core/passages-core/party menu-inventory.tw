:: Menu: Inventory[menu battle noreturn]
<span id="content" class="menu"><<nobr>>
<<set _filter = "all">>

<<liveblock>>
<<include "inventory item display">>
<</liveblock>>

<div id="itemlist">
<<include "inventory item list">>
</div>
<</nobr>>
</span>

:: inventory item list[nobr]
<div style="display:flex; justify-content:space-evenly;">
<<if _filter == "all">>
	<b>All</b>
<<else>>
	<<link "All">>
		<<set _filter = "all">>
		<<replace "#itemlist">><<include "inventory item list">><</replace>>
	<</link>>
<</if>>
<<if _filter == "usable">>
	<b>Usable</b>
<<else>>
	<<link "Usable">>
		<<set _filter = "usable">>
		<<replace "#itemlist">><<include "inventory item list">><</replace>>
	<</link>>
<</if>>
<<if _filter == "equipment">>
	<b>Equipment</b>
<<else>>
	<<link "Equipment">>
		<<set _filter = "equipment">>
		<<replace "#itemlist">><<include "inventory item list">><</replace>>
	<</link>>
<</if>>
</div>
<br/>
<div class="itemcontainer">
<<set _p = 2>>
<<for _item range inv()>>
	<<if _filter == "all" || (_filter == "usable" && _item.usable.includes("inmenu")) || (_filter == "equipment" && _item.equippable)>>
	<<if _p == 1>>
		<<set _p = 2>>
	<<elseif _p == 2>>
		<<set _p = 1>>
	<</if>>
	<div @class="'item'+_p">
	<b>
	<<capture _item>>
	<<link _item.displayName>>
		<<set _display = _item>>
		<<update>>
	<</link>>
	<</capture>>
	</b> <span class="itemstock">(_item.stock)</span>
	</div>
	<</if>>
<</for>>
</div>

:: inventory item display[nobr]
<<if ndef _display || _display === null>>
	<div id="menu-display" class="relative inventory">
		<div class="centered" style="color: gray">Click on an item to see info</div>
	</div>
	<div class="item-buttons-container">
	</div>
<<else>>
	<div id="menu-display" class="relative inventory">
		<<print _display>>
	</div>
	<div class="item-buttons-container">
		<div class="item-buttons">
		<<if _display.usable.includes('inmenu') || _display.equippable>>
			<<set _b = 0>>
			<<if _display.usable.includes('inmenu') && _display.stock > 0>>
				<<set _b++>>
				<span @id="'button'+_b">
					<span id="usebutton" class="white-button">
					<<include "inventory use button">>
					</span>
				</span>
			<</if>>
			<<if _display.equippable && _display.stock > 0>>
				<<set _b++>>
				<span @id="'button'+_b">
					<span id="equipbutton" class="white-button">
					<<include "equip button">>
					</span>
				</span>
			<</if>>
			<<if def _event>>
				<span id="button1">
					<span id="cancelbutton">
					<<include "inventory cancel button">>
					</span>
				</span>
			<</if>>
		<</if>>
		</div>
	</div>
<</if>>

:: equip button[nobr]
<<button "EQUIP">>
	<<set _event = "equip">>
	<<update>>
	<<replace "#itemlist">><<include "inventory puppets">><</replace>>
<</button>>
<<if _b == 1>>
<span class="monospace" style="font-size:85%">[Q]</span>
<<elseif _b == 2>>
<span class="monospace" style="font-size:85%">[W]</span>
<</if>>

:: inventory use button[nobr]
<<button "USE">>
	<<if _display.instantUse === true>>
		<<run _display.onUse()>>
	<<else>>
		<<set _event = "use">>
		<<update>>
		<<replace "#itemlist">><<include "inventory puppets">><</replace>>
	<</if>>
<</button>>
<span class="monospace" style="font-size:85%">[Q]</span>

:: inventory cancel button[nobr]
<<button "CANCEL">>
	<<unset _event>>
	<<update>>
	<<replace "#itemlist">><<include "inventory item list">><</replace>>
<</button>>
<span class="monospace" style="font-size:85%">[R]</span>

:: Actor Display Inventory[widget nobr]
/* On the inventory screen, characters may be displayed when EQUIPPING or USING items. When using items, the character name is clicked to perform the relevant function. The inventory screen must be updated afterwards to reflect the change. */
<<widget "ActorNameInv">>
<<set _puppet = $args[0]>>
<<switch _event>>
	<<case "use">>
		<<link _puppet.name>>
			<<notify "menu" 3s>><<print _display.onUse(_puppet)>><</notify>>
			<<unset _display>><<unset _event>>
			<<update>>
			<<replace "#itemlist">><<include "inventory item list">><</replace>>
		<</link>>
	<<default>>
		<<print _puppet.name>>
<</switch>>
<</widget>>

:: inventory puppets[nobr]
<<set _HPmeters = []>>
<<set _MPmeters = []>>
<<for _i, _p range puppets().filter(function(p) { return temporary().event == "use" || (!p.lockEquipment && p.checkRestriction(temporary().display)); })>>
	<<actorDisplay _p "inventory">>
<</for>>
