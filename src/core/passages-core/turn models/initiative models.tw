:: Initiative Model: Action Time[nobr]
/* initiative gain */
/* Note this model assumes everyone's "initiative" attribute is initialized to 0 at battle start. */

<<for _party range $actors>>
	<<for _actor range _party.filter(function (a) { return a !== null && !a.dead; })>>
		<<set _actor.initiative += _actor.get("Speed")>>
	<</for>>
<</for>>

/* initiative comparison */

<<set _initiative = -1>>
<<for _party range $actors>>
	<<for _actor range _party.filter(function (a) { return a !== null && !a.dead; })>>
		<<if _actor.initiative > _initiative>>
			<<set _subj = _actor>>
			<<set _initiative = _actor.initiative>>
		<<elseif _actor.initiative == _initiative>>
			<<set _r = random(1,2)>>
			<<if _r == 1>>
				<<set _subj = _actor>>
			<</if>>
		<</if>>
	<</for>>
<</for>>

<<if ndef _subj>>
(You should write an error message here.)
<<else>>
	<<set $subject = _actor; subject().initiative = 0>>
	<<if subject() instanceof Enemy>>
		<<set $B.turn = "enemy">>
	<</if>>
<</if>>

:: Initiative Model: Action Time with Threshold[nobr]
/* Note that this assumes everyone's "initiative" attribute is set to 0 at battle start. */

<<set _threshold = setup.ACTION_THRESHOLD>> /* You would set ACTION_THRESHOLD to some constant in StoryInit. */
<<set _pastThreshold = false>>

/* check for characters already at threshold */

<<for _party range $actors>>
	<<if _pastThreshold>>
		<<break>>
	<</if>>
	<<for _actor range _party.filter(function (a) { return a !== null && !a.dead; })>>
		<<if _actor.initiative >= _threshold>>
			<<set _pastThreshold = true>>
			<<break>>
		<</if>>
	<</for>>
<</for>>

/* initiative gain */

<<for not _pastThreshold>>
	<<for _party range $actors>>
		<<for _actor range _party.filter(function (a) { return a !== null && !a.dead; })>>
			<<set _actor.initiative += 20 + 0.2 * _actor.get("Speed")>>
			/* This is the Bonfire formula, but you can add your own */
			<<if _actor.initiative >= _threshold>>
				<<set _pastThreshold = true>>
			<</if>>
		<</for>>
	<</for>>
<</for>>

/* initiative comparison */

<<for _party range $actors>>
	<<for _actor range _party.filter(function (a) { return a !== null && !a.dead; })>>
		<<if _actor.initiative > _threshold>>
			<<set _subj = _actor>>
			<<set _threshold = _actor.initiative>>
		<<elseif _actor.initiative == _threshold>>
			<<if def _subj>>
				<<set _r = random(1,2)>>
				<<if _r == 1>>
					<<set _subj = _actor>>
				<</if>>
			<<else>>
				<<set _subj = _actor>>
			<</if>>
		<</if>>
	<</for>>
<</for>>

<<if ndef _subj>>
(You should write an error message here.)
<<else>>
	<<set $subject = _actor; subject().initiative -= setup.ACTION_THRESHOLD>>
	<<if subject() instanceof Enemy>>
		<<set $B.turn = "enemy">>
	<</if>>
<</if>>

:: Initiative Model: Timeline[nobr]
/* Note that you will need to come up with a method for determining everyone's starting initiative; that is not modeled here. */

<<set _threshold = 0>>
<<set _pastThreshold = false>>

/* check for characters already at threshold */

<<for _party range $actors>>
	<<if _pastThreshold>>
		<<break>>
	<</if>>
	<<for _actor range _party.filter(function (a) { return a !== null && !a.dead; })>>
		<<if _actor.initiative <= _threshold>>
			<<set _pastThreshold = true>>
			<<break>>
		<</if>>
	<</for>>
<</for>>

/* initiative gain */

<<for not _pastThreshold>>
	<<for _party range $actors>>
		<<for _actor range _party.filter(function (a) { return a !== null && !a.dead; })>>
			<<set _actor.initiative -= 1>>
			<<if _actor.initiative <= _threshold>>
				<<set _pastThreshold = true>>
			<</if>>
		<</for>>
	<</for>>
<</for>>

/* initiative comparison */

<<for _party range $actors>>
	<<for _actor range _party.filter(function (a) { return a !== null && !a.dead; })>>
		<<if _actor.initiative < _threshold>>
			<<set _subj = _actor>>
			<<set _threshold = _actor.initiative>> /* This is only necessary if it is possible to overshoot the threshold */
		<<elseif _actor.initiative == _threshold>>
			<<if def _subj>>
				<<set _r = random(1,2)>>
				<<if _r == 1>>
					<<set _subj = _actor>>
				<</if>>
			<<else>>
				<<set _subj = _actor>>
			<</if>>
		<</if>>
	<</for>>
<</for>>

<<if ndef _subj>>
(You should write an error message here.)
<<else>>
	<<set $subject = _actor; subject().initiative -= setup.ACTION_THRESHOLD>>
	<<if subject() instanceof Enemy>>
		<<set $B.turn = "enemy">>
	<</if>>
<</if>>
