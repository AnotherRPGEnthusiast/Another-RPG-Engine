:: Status Pane [nobr]
<<if def $B.actor && $B.actor !== null>>

<div class="statusname">$B.actor.name</div>
<<if setup.TURN_MODEL.toLowerCase() === "action">>
	<span class="statname">ACT TIME:</span>
	<span class="stat">
		<<print $B.actor.actTime>><<if Number.isInteger(setup.TIME_THRESHOLD)>> / <<print setup.TIME_THRESHOLD>><</if>>
	</span>
	<br/>
<</if>>
<div style="float: right;">
<<if def setup.STATUS_SCREENS.battle && setup.STATUS_SCREENS.battle.length > 0>>
<span id="statusback">
<<link "<">>
	<<set $stScreen-->>
	<<if $stScreen < 1>>
		<<set $stScreen = setup.STATUS_SCREENS.battle.length+1>>
	<</if>>
	<<if setup.STATUS_SCREENS.battle[$stScreen-2] == "aggression" && $B.actor instanceof Puppet>>
		<<set $stScreen-->>
	<</if>>
	<<replace "#status">><<include "Status Pane">><</replace>>
<</link>>
</span>
<span id="statusforward">
<<link ">">>
	<<set $stScreen++>>
	<<if setup.STATUS_SCREENS.battle[$stScreen-2] == "aggression" && $B.actor instanceof Puppet>>
		<<set $stScreen++>>
	<</if>>
	<<if $stScreen > setup.STATUS_SCREENS.battle.length+1>>
		<<set $stScreen = 1>>
	<</if>>
	<<replace "#status">><<include "Status Pane">><</replace>>
<</link>>
</span>
<</if>>
</div>
<br/>
<<include "Status Screens">>

<</if>>

:: Status Screens [nobr]
<<if $stScreen == 1>>
/* 1 = effect screen, default, unlinked to STATUS_SCREENS and always available */
	<<include "Status Pane: Effects">>
<<elseif setup.STATUS_SCREENS.battle[$stScreen-2] == "elements">>
	<<include "Status Pane: Elements">>
<<elseif setup.STATUS_SCREENS.battle[$stScreen-2] == "ailments">>
	<<include "Status Pane: Tolerances">>
<<elseif setup.STATUS_SCREENS.battle[$stScreen-2] == "aggression">>
	<<include "Status Pane: Aggression">>
<</if>>

:: Stat Screen [nobr]
<div class="statBlock">
<<for _k, _v range _actor.stats>>
	<<if !setup.statInfo[_k].hidden>>
		<span class="statname monospace"><<print setup.statInfo[_k].short>></span>
		<<stat _k _actor>>
		<br/>
	<</if>>
<</for>>
</div>

:: Widget: stat display [widget nobr]
<<widget "stat">>
/* Designed by greyelf */
	/* Check that a Stat Name was passed to the widget. */
	<<if $args.length is 0>>
		ERROR
	<<else>>
		/* Initialize variables */
		<<set _stat = $args[0]>>
		<<set _a = ($args[1] instanceof Actor) ? $args[1] : _actor>>
		<<set _current = _a.get($args[0]) >>
		<<set _base = _a.getBase($args[0]) + _a.getEquipBonus($args[0])>>

		<span class="stat">
		<<if _a.maskstats || (def $bestiary && $bestiary.fetch(_a.name) && !$bestiary.fetch(_a.name).statsKnown[_stat])>>
			/* Check if stats are masked or unknown */
				??
		<<else>>
			<<if setup.statInfo[_stat].percentile>>
				<<if _current > 0>>
					+
				<<elseif _current === 0>>
					Â±
				<</if>>
			<</if>>
			/* Check if the Stat has been raised. */
			<<if _current > _base >>
				@@.stat-raised;_current@@
			/* Check if the Stat has been lowered. */
			<<elseif _current < _base >>
				@@.stat-lowered;_current@@
			/* The Stat has not changed. */
			<<else>>
				_current
			<</if>>
		<</if>>
		</span>
		<<if setup.statInfo[_stat].percentile>>
			<span style="grid-column:3">
			%
			</span>
		<</if>>
	<</if>>
<</widget>>

:: Status Pane: Effects [nobr]
<div class="pane-header">EFFECTS</div>
/* Filter out invisible effects */
<<set _effects = $B.actor.effects.filter(eff => { return !eff.invisible; })>>
<<if _effects.length === 0>>
/* If actor has no effects, inform the player of this */
	<center style="color: gray; font-weight:bold; font-style:italic">None!</center>
<<else>>
/* If actor has effects, loop over all effects and display their name, duration, and description. */
	<<for _k, _effect range _effects>>
		<div class="effectinfo">
		_effect.name
		<<if _effect.duration >= 0>>
			<span class="duration"><<print _effect.duration>> turn<<if _effect.duration > 1>>s<</if>></span>
		<</if>><br/>
		<span class="effectdesc">
		<<print _effect.info(_effect)>>
		</span>
		</div><br/>
	<</for>>
<</if>>

:: Status Pane: Elements [nobr]
<div class="pane-header">ELEMENTAL RESISTANCE</div>
<<for _k, _v range $B.actor.elements>>
<<if (setup.HIDDEN_ELEMENTS instanceof Array) && !setup.HIDDEN_ELEMENTS.includes(_k)>>
	<span class="statname"><<print _k>></span>
	<span style="float:right">
		<<if def $bestiary && $bestiary.fetch($B.actor.name) && !$bestiary.fetch($B.actor.name).statsKnown[_k]>>
			<<if setup.SOAK>>?? /<</if>><div style="display: inline-block; min-width:55px; text-align:right">???%</div>
		<<else>>
			<<if setup.SOAK>><<soak _v>> /<</if>><div style="display: inline-block; min-width:55px; text-align:right"><<resistance _v>></div>
		<</if>>
	</span>
	<br/>
<</if>>
<</for>>

:: Widget: resistance display [widget nobr]
<<widget "resistance">>
/* Check that an argument was passed to the widget. */
	<<if $args.length is 0>>
		ERROR
	<<else>>
		<<set _r = $args[0].percent.current>>
		<<set _r = Math.round((_r - 1) * -100)>>

		/* Weakpoint? */
		<<if _r < 0 >>
			@@.stat-lowered;<<print _r>>%@@

		/* Absorbance? */
		<<elseif _r > 100 >>
			<<run _r -= 100>>
			@@.green;+<<print _r>>%@@

		/* Resistance? */
		<<elseif _r > 0 >>
			@@.stat-raised;<<print _r>>%@@

		<<else>>
			<<print _r>>%
		<</if>>

	<</if>>
<</widget>>

:: Widget: soak display [widget nobr]
<<widget "soak">>
	<<if $args.length is 0>>
		ERROR
	<<else>>
		<<set _r = $args[0].flat.current>>

		/* Weakpoint? */
		<<if _r < 0 >>
			@@.stat-lowered;<<print _r>>@@

		/* Resistance? */
		<<elseif _r > 0 >>
			@@.stat-raised;<<print _r>>@@

		<<else>>
			<<print _r>>
		<</if>>

	<</if>>
<</widget>>

:: Status Pane: Tolerances [nobr]
<div class="pane-header">AILMENT TOLERANCE</div>
<<for _k, _v range $B.actor.tolerances>>
	<<if _v.current != 0>>
		<<if def $bestiary && $bestiary.fetch($B.actor.name) && !$bestiary.fetch($B.actor.name).tolerancesKnown[_k]>>
			<span class="tolerance">????</span>
		<<else>>
			<<print _k>>
			<<tolerance _v>>
		<</if>>
		<br/>
	<</if>>
<</for>>

:: Widget: tolerance display [widget nobr]
<<widget "tolerance">>
	<<if $args.length is 0>>
		ERROR
	<<else>>
		/* Unlike other status widgets, this is passed the value, not the key. */
		<<set _v = $args[0]>>
		<span class="tolerance">

		/* Immunity? */
		<<if _v.current < 0>>
			X

		/* Tolerance? */
		<<elseif _v.currentVal > 0>>
			<<print _v.currentVal>>

		/* Tolerance exhausted? */
		<<elseif _v.currentVal == 0>>
			!
		<</if>>
		</span>

	<</if>>
<</widget>>

:: Status Pane: Aggression [nobr]
<div class="pane-header">AGGRESSION</div>
<<set _totalThreat = 0>>
<<for _k, _v range $B.actor.threat>>
	<<set _totalThreat += _v>>
<</for>>
<<if _totalThreat == 0>>
	<<set _totalThreat = 1>>
<</if>>
<<for _k, _v range $B.actor.threat>>
	<span class="statname"><<print _k>></span>
	<<set _value = (_v / _totalThreat)*100; _value = _value.toFixed(0)>>
	<span class="right"><<print _value+"%">></span>
	<br/>
<</for>>
