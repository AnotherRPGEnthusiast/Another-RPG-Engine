:: Action Queue [nobr]
/* Special actions are added to the action queue. If the action queue contains any actions, this passage will activate instead of the normal destination when the player clicks "continue". */
/* Assumes that elements of the action queue are two-element arrays with the subject's ID in the 0th element and the action as the 1st element. */
<<if $B.actionQueue.length > 0>>
	<<set _data = $B.actionQueue.shift()>>
	<<set _OG = {target: $target, subject: $subject, action: $action}>>
	<<set $subject = getActorById(_data[0]); $action = _data[1]>>
	<<if !(subject().dead || subject().noact)>>
		<<if $action.counter>>
			<<set $target = _OG.subject>>
			<<set _counterActive = true>>
		<<else>>
			<<set $target = $action.targetMethod($action.targetMod)>>
		<</if>>
		<<include "action effects">><br/>
		<<set _counterActive = false>>
	<<else>>
		<<timed 0s>><<trigger 'click' "#continue button">><</timed>>
	<</if>>
<</if>>
<<include "Battle Continue Button">>

:: Widget: hunterCheck [widget nobr]
<<widget "hunterCheck">>
/* Called in the Enemy Phase, after every enemy's action. */

	<<if $target.id.charAt(0) !== $subject.id.charAt(0)>>
		<<for _actor range $target.ownParty>>
			<<if _actor.hunter && !(_actor.dead || _actor.noact || _actor.uncontrollable)>>
				<<set $B.actionQueue.push([_actor.id,new Action("Hunter Counter")])>>
			<</if>>
		<</for>>
	<</if>>

<</widget>>

:: Widget: markAttack [widget nobr]
<<widget "markAttack">>
/* Called in the Action Phase, after action is finished. */
<<set _archer = $puppets.
	find(function (p) { return p && p.name == "Archer" && !(p.dead || p.noact || p.uncontrollable) })>>

<<if def _archer
	&& $subject instanceof Puppet
	&& subject().name != "Archer"
	&& $target instanceof Enemy
	&& _archer.en > 0
	&& enemies().filter(function (e) { return e.marked && !e.dead }).length > 0>>

	<<set _markActive = true>>
	<<run $B.actionQueue.push([_archer.id,new Action("Mark Shot")])>>

<</if>>
<</widget>>
